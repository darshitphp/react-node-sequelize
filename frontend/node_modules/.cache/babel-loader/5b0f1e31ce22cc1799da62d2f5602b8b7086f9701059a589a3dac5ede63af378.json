{"ast":null,"code":"var _jsxFileName = \"/var/www/html/demoSeq/frontend/src/components/Tag.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tag() {\n  _s();\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [items, setItems] = useState([]);\n  const fetchItems = async () => {\n    const data = await fetch('/api/tags/tagData', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const items = await data.json();\n    setItems(items.data);\n  };\n  const spacing = 2; // Assuming you have a spacing value\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.vName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-primary\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 78\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Tag, \"WKD7sBQWEpUOp7ovqKBZDe/fxJw=\");\n_c = Tag;\nexport default Tag;\nvar _c;\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Tag","_s","fetchItems","items","setItems","data","fetch","method","headers","json","spacing","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","vName","type","class","_c","$RefreshReg$"],"sources":["/var/www/html/demoSeq/frontend/src/components/Tag.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nfunction Tag() {\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [items, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/api/tags/tagData',{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n        });\n        const items = await data.json();\n        setItems(items.data);\n    };\n\n    const spacing = 2; // Assuming you have a spacing value\n\n    return(\n        <section className=\"row\">\n        <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n    {\n        items.map((item, index) => (\n            <tr key={index}>\n              <th scope=\"row\">{index}</th>\n              <td>{item.vName}</td>\n              <td><button type=\"button\" class=\"btn btn-primary\">Edit</button><button type=\"button\" class=\"btn btn-danger\">Delete</button></td>\n            </tr>\n              \n        ))\n    }\n    </tbody>\n    </table>\n    </section>\n    );\n}\n\nexport default Tag;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}