{"ast":null,"code":"var _jsxFileName = \"/var/www/html/demoSeq/frontend/src/components/User.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport withAuth from './withAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  const [items, setItems] = useState([]);\n  const fetchItems = async () => {\n    const data = await fetch('/api/user/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const items = await data.json();\n    setItems(items.data);\n  };\n  const spacing = 2; // Assuming you have a spacing value\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.vName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.vCity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.vEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(User, \"WKD7sBQWEpUOp7ovqKBZDe/fxJw=\");\n_c = User;\nconst ProtectedUser = withAuth(User);\n_c2 = ProtectedUser;\nexport default ProtectedUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"ProtectedUser\");","map":{"version":3,"names":["React","useEffect","useState","withAuth","jsxDEV","_jsxDEV","User","_s","fetchItems","items","setItems","data","fetch","method","headers","json","spacing","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","vName","vCity","vEmail","_c","ProtectedUser","_c2","$RefreshReg$"],"sources":["/var/www/html/demoSeq/frontend/src/components/User.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport withAuth from './withAuth';\n\nfunction User() {\n    useEffect( () => {\n        fetchItems();\n    }, []);\n\n    const [items, setItems] = useState([]);\n\n    const fetchItems = async () => {\n        const data = await fetch('/api/user/test',{\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n        });\n        const items = await data.json();\n        setItems(items.data);\n    };\n\n    const spacing = 2; // Assuming you have a spacing value\n\n    return(\n        <section className=\"row\">\n        <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">City</th>\n                  <th scope=\"col\">Email</th>\n                </tr>\n              </thead>\n              <tbody>\n    {\n        items.map((item, index) => (\n            <tr key={index}>\n              <th scope=\"row\">{index+1}</th>\n              <td>{item.vName}</td>\n              <td>{item.vCity}</td>\n              <td>{item.vEmail}</td>\n            </tr>\n              \n        ))\n    }\n    </tbody>\n    </table>\n    </section>\n    );\n}\n\n\nconst ProtectedUser = withAuth(User);\n\nexport default ProtectedUser;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}